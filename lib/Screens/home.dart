import 'package:flutter/material.dart';import 'package:google_maps_flutter/google_maps_flutter.dart';import 'package:firebase_auth/firebase_auth.dart';import '../Widgets/sidebar.dart';import 'Login.dart';class HomeScreen extends StatefulWidget {  const HomeScreen({super.key});  @override  _HomeScreenState createState() => _HomeScreenState();}class _HomeScreenState extends State<HomeScreen> {  late GoogleMapController mapController;  LatLng _currentPosition = const LatLng(45.521563, -122.677433);  final TextEditingController _latController = TextEditingController();  final TextEditingController _lngController = TextEditingController();  String userEmail = "Loading...";  @override  void initState() {    super.initState();    _fetchUserEmail();  }  void _fetchUserEmail() {    final user = FirebaseAuth.instance.currentUser;    if (user != null) {      setState(() {        userEmail = user.email ?? "No Email";      });    }  }  void _onMapCreated(GoogleMapController controller) {    mapController = controller;  }  Set<Marker> _createMarker() {    return {      Marker(        markerId: const MarkerId('userLocation'),        position: _currentPosition,        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),        infoWindow: const InfoWindow(title: 'User-defined Location'),      ),    };  }  Set<Circle> _createCircle() {    return {      Circle(        circleId: const CircleId('InfectionZone'),        center: _currentPosition,        radius: 450,        strokeColor: Colors.pinkAccent,        fillColor: Colors.pinkAccent.withOpacity(0.3),      ),    };  }  void _updateLocation() {    final double? latitude = double.tryParse(_latController.text);    final double? longitude = double.tryParse(_lngController.text);    if (latitude != null && longitude != null) {      setState(() {        _currentPosition = LatLng(latitude, longitude);        mapController.animateCamera(          CameraUpdate.newCameraPosition(            CameraPosition(target: _currentPosition, zoom: 14.0),          ),        );      });    } else {      ScaffoldMessenger.of(context).showSnackBar(        SnackBar(content: Text("Please enter valid coordinates")),      );    }  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: const Text("Covid Tracker"),        centerTitle: true,        backgroundColor: Colors.redAccent,        actions: [          IconButton(            icon: const Icon(Icons.logout),            onPressed: () async {              await FirebaseAuth.instance.signOut();              Navigator.of(context).pushReplacement(                MaterialPageRoute(builder: (context) => LoginScreen()),              );            },          ),        ],      ),      drawer: Sidebar(email: userEmail),      body: Column(        children: [          Padding(            padding: const EdgeInsets.all(8.0),            child: Column(              children: [                TextField(                  controller: _latController,                  decoration: InputDecoration(                    labelText: "Latitude",                    border: OutlineInputBorder(),                    prefixIcon: Icon(Icons.place),                  ),                  keyboardType: TextInputType.number,                ),                const SizedBox(height: 8),                TextField(                  controller: _lngController,                  decoration: InputDecoration(                    labelText: "Longitude",                    border: OutlineInputBorder(),                    prefixIcon: Icon(Icons.place),                  ),                  keyboardType: TextInputType.number,                ),                const SizedBox(height: 10),                ElevatedButton(                  onPressed: _updateLocation,                  child: const Text("Update Location"),                  style: ElevatedButton.styleFrom(                    backgroundColor: Colors.redAccent,                  ),                ),              ],            ),          ),          Expanded(            child: GoogleMap(              onMapCreated: _onMapCreated,              initialCameraPosition: CameraPosition(                target: _currentPosition,                zoom: 14.0,              ),              markers: _createMarker(),              circles: _createCircle(),              mapType: MapType.normal,            ),          ),        ],      ),    );  }}